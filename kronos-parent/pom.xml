<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kronos.app</groupId>
	<artifactId>kronos-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<!-- Global Properties section :Updated -->
	<properties>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${project.basedir}/target/coverage-reports/jacoco-ut.exec</sonar.jacoco.reportPath>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.9.10</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
  		<groupId>com.ilog.CPLEX</groupId>
  		<artifactId>CPLEX</artifactId>
  		<version>2.0</version>
  		</dependency>
  		
  		<dependency>
  			<groupId>com.cplex.library</groupId>
  			<artifactId>libcplex1261</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>


<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261mpitransport</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261mpiworker</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261processtransport</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261processworker</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261remotejni</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261tcpiptransport</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

<dependency>
  <groupId>com.cplex.library</groupId>
  <artifactId>libcplex1261tcpipworker</artifactId>
  <version>1.0</version>
  <type>so</type>
</dependency>

	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<url>http://10.105.65.205:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	
	<repositories>
    <repository>
      <id>repothirdparty</id>
      <name>thirdparty</name>
      <url>http://10.105.65.205:8081/nexus/content/repositories/thirdparty</url>
    </repository>
    
    <repository>
      <id>Central</id>
      <name>Central</name>
      <url>http://10.105.65.205:8081/nexus/content/repositories/central/</url>     
    </repository> 
  </repositories>
  
  
	<build>
		<finalName>Cplex</finalName>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
				<configuration>
                    <forkCount>5</forkCount>
                    <reuseForks>true</reuseForks>
                   <argLine>${surefireArgLine}</argLine>
                   <skipTests>${skip.unit.tests}</skipTests>
                    <argLine>-Djava.library.path=target/lib/</argLine>
   
                   <excludes></excludes>
                </configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
		
		    <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
            <archive>
                <manifest>
                    <addClasspath>true</addClasspath>
                    <mainClass>com.kronos.parent.Sample</mainClass>
                </manifest>
            </archive>
            <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
        </configuration>
        <executions>
            <execution>
                <id>make-my-jar-with-dependencies</id>
                <phase>package</phase>
                
                <goals>
                    <goal>single</goal>
                </goals>
            </execution>
        </executions>
    </plugin>
    
    
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
 				<!--Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed.-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
 							<!--  Sets the path to the file which contains the execution data.  -->
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<!-- <dataFile>${sonar.jacoco.reportPath}</dataFile> -->
 							<!-- Sets the name of the property containing the settings for JaCoCo
 							runtime agent.  -->
						 <propertyName>surefireArgLine</propertyName> 
						</configuration>
					</execution>
 					<!--  Ensures that the code coverage report for unit tests is created
 						after unit tests have been run.  -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
 							<!--  Sets the path to the file which contains the execution data.  -->
							<dataFile>${sonar.jacoco.reportPath}</dataFile>
 							<!--Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.5.1</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<serverId>nexus</serverId>
					<nexusUrl>http://10.105.65.205:8081/nexus/</nexusUrl>
					<skipStaging>true</skipStaging>
				</configuration>
			</plugin>
			
			
			<plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-dependency-plugin</artifactId>
     <executions>
       <execution>
              <id>copy</id>
              <phase>compile</phase>
              <goals>
                     <goal>copy</goal>
              </goals>
              <configuration>
                    <artifactItems>
                    
                      <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261mpitransport</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261mpiworker</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId> libcplex1261processtransport</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261processworker</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261remote</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261remotejni</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261tcpiptransport</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
                     
                     <artifactItem>
                             <groupId>com.cplex.library</groupId>
  									<artifactId>libcplex1261tcpipworker</artifactId>
 								    <version>1.0</version>
  									<type>so</type>
                             <overWrite>true</overWrite>
                      <outputDirectory>${project.build.directory}/lib</outputDirectory>
                     </artifactItem>
               
                     
                  </artifactItems>
               </configuration>
             </execution>
          </executions>
 </plugin>
 
		</plugins>
	</build>
	
	
	
</project>

